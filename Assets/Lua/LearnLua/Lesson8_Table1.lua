print("**********复杂数据类型 talbe************")
--所有的复杂类型都是table（表）
print("**********数组************")
a = {1,2,3,"1231",true,nil}
--lua中 索引从1开始
print(a[1])
print(a[5])
print(a[6])
print(a[7])
--#是通用的获取长度的关键字
--在打印长度的时候 空被忽略
--如果表中（数组中）某一位变成nil 会影响#获取的长度
print(#a)
print("**********数组的遍历************")
for i=1,#a do
	print(a[i])
end
print("**********二维数组************")
a={{1,2,3},{4,5,6}}
print(a[1][1])
print("**********二维数组的遍历************")
for i=1,#a do
	b=a[i]
	for j=1,#b do
		print(b[j])
	end
end
print("**********自定义索引************")
aa={[0]=1,2,3,[-1]=4,5}
print(aa[0])
print(aa[-1])
-- 即便使用自定义索引 也会导致  2 3 5是连续的
print(aa[1])
print(aa[2])
print(aa[3])

print("----------------------------")
-- 深坑,与table底层实现有关系 索引断掉两个会被认为是单独的两个
-- 不建议使用
bb={[1]=1,[2]=2,[4]=4,[5]=5}
cc={[1]=1,[2]=2,[5]=4,[6]=5}
print("bb长度"..#bb)
print("cc长度"..#cc)
print(bb[1])
print(bb[2])
print(bb[3])
print(bb[4])
print(bb[5])